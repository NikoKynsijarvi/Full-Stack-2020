{"version":3,"sources":["components/Notification.js","services/notes.js","App.js","index.js"],"names":["Notification","message","className","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","Note","note","toggleImportance","label","important","content","onClick","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0NAUeA,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAgB,OAAZA,EACI,KAGD,yBAAKC,UAAU,SAASD,I,gBCWjB,EAfA,WAGd,OAFgBE,IAAMC,IAHP,cAKAC,MAAK,SAACC,GAAD,OAAcA,EAASC,SAY7B,EATA,SAACC,GAEf,OADgBL,IAAMM,KATP,aASqBD,GACrBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAO7B,EAJA,SAACG,EAAIF,GAEnB,OADgBL,IAAMQ,IAAN,UAdD,aAcC,YAAwBD,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCXtCK,EAAS,WAMd,OACC,yBAAKC,MANc,CACnBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIT,6BACA,8GAiGYC,EA1FH,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEQF,mBAAS,IAFjB,mBAEfG,EAFe,KAENC,EAFM,OAGQJ,oBAAS,GAHjB,mBAGfK,EAHe,KAGNC,EAHM,OAIkBN,mBAAS,0BAJ3B,mBAIfO,EAJe,KAIDC,EAJC,KAMtBC,qBAAU,WACTC,IAAqBxB,MAAK,SAACyB,GAC1BT,EAASS,QAER,IAEH,IAsCMC,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACC,wBAAIjC,UAAU,QACZ8B,EAAKI,QACN,4BAAQC,QAASJ,GAAmBC,KAKjCI,EAAcd,EAAUJ,EAAQA,EAAMmB,QAAO,SAACP,GAAD,OAAUA,EAAKG,aAElE,OACC,6BACC,qCACA,kBAAC,EAAD,CAAclC,QAASyB,IACvB,6BACC,4BAAQW,QAAS,kBAAMZ,GAAYD,KAAnC,QACOA,EAAU,YAAc,QAGhC,4BACEc,EAAYE,KAAI,SAACR,GAAD,OAChB,kBAACD,EAAD,CACCU,IAAKT,EAAKtB,GACVsB,KAAMA,EACNC,iBAAkB,kBApDI,SAACvB,GAClB,sCAAkCA,GAA3C,IACMsB,EAAOZ,EAAMsB,MAAK,SAACC,GAAD,OAAOA,EAAEjC,KAAOA,KAClCkC,EAAW,2BAAQZ,GAAR,IAAcG,WAAYH,EAAKG,YAEhDN,EACSnB,EAAIkC,GACXvC,MAAK,SAACwC,GACNxB,EAASD,EAAMoB,KAAI,SAACR,GAAD,OAAWA,EAAKtB,IAAMA,EAAKsB,EAAOa,SAErDC,OAAM,SAACC,GACPpB,EAAgB,SAAD,OACLK,EAAKI,QADA,sCAGfY,YAAW,WACVrB,EAAgB,QACd,KACHN,EAASD,EAAMmB,QAAO,SAACI,GAAD,OAAOA,EAAEjC,KAAOA,SAmCZuC,CAAmBjB,EAAKtB,WAInD,0BAAMwC,SArEQ,SAACC,GAChBA,EAAMC,iBACN,IAAMC,EAAa,CAClBjB,QAASd,EACTgC,MAAM,IAAIC,MAAOC,cACjBrB,UAAWsB,KAAKC,SAAW,GAC3BhD,GAAIU,EAAMuC,OAAS,GAEpB9B,EAAmBwB,GAAYhD,MAAK,SAACwC,GACpCxB,EAASD,EAAMwC,OAAOf,IACtBtB,EAAW,SA4DV,2BAAOsC,MAAOvC,EAASwC,SApCD,SAACX,GACzB5B,EAAW4B,EAAMY,OAAOF,UAoCtB,4BAAQG,KAAK,UAAb,SAED,kBAAC,EAAD,QCpGHC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d6af263a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n\tconst request = axios.post(baseUrl, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject);\r\n\treturn request.then((response) => response.data);\r\n};\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Notification from \"./components/Notification\";\r\nimport Note from \"./components/Note\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst Footer = () => {\r\n\tconst footerStyle = {\r\n\t\tcolor: \"green\",\r\n\t\tfontStyle: \"italic\",\r\n\t\tfontSize: 16,\r\n\t};\r\n\treturn (\r\n\t\t<div style={footerStyle}>\r\n\t\t\t<br />\r\n\t\t\t<em>\r\n\t\t\t\tNote app, Department of Computer Science, University of Jyväskylä 2020\r\n\t\t\t</em>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst App = (props) => {\r\n\tconst [notes, setNotes] = useState([]);\r\n\tconst [newNote, setNewNote] = useState(\"\");\r\n\tconst [showAll, setShowAll] = useState(true);\r\n\tconst [errorMessage, setErrorMessage] = useState(\"some error happened...\");\r\n\r\n\tuseEffect(() => {\r\n\t\tnoteService.getAll().then((initialNotes) => {\r\n\t\t\tsetNotes(initialNotes);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst addNote = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: newNote,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\timportant: Math.random() > 0.5,\r\n\t\t\tid: notes.length + 1,\r\n\t\t};\r\n\t\tnoteService.create(noteObject).then((returnedNote) => {\r\n\t\t\tsetNotes(notes.concat(returnedNote));\r\n\t\t\tsetNewNote(\"\");\r\n\t\t});\r\n\t};\r\n\tconst toggleImportanceOf = (id) => {\r\n\t\tconst url = `http://localhost:3001/notes/${id}`;\r\n\t\tconst note = notes.find((n) => n.id === id);\r\n\t\tconst changedNote = { ...note, important: !note.important };\r\n\r\n\t\tnoteService\r\n\t\t\t.update(id, changedNote)\r\n\t\t\t.then((returnedNote) => {\r\n\t\t\t\tsetNotes(notes.map((note) => (note.id != id ? note : returnedNote)));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tsetErrorMessage(\r\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\r\n\t\t\t\t);\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetErrorMessage(null);\r\n\t\t\t\t}, 5000);\r\n\t\t\t\tsetNotes(notes.filter((n) => n.id !== id));\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst handleNoteChange = (event) => {\r\n\t\tsetNewNote(event.target.value);\r\n\t};\r\n\r\n\tconst Note = ({ note, toggleImportance }) => {\r\n\t\tconst label = note.important ? \"make not important\" : \"make important\";\r\n\r\n\t\treturn (\r\n\t\t\t<li className=\"note\">\r\n\t\t\t\t{note.content}\r\n\t\t\t\t<button onClick={toggleImportance}>{label}</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t};\r\n\r\n\tconst notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Notes</h1>\r\n\t\t\t<Notification message={errorMessage} />\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\r\n\t\t\t\t\tshow {showAll ? \"important\" : \"all\"}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul>\r\n\t\t\t\t{notesToShow.map((note) => (\r\n\t\t\t\t\t<Note\r\n\t\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t\tnote={note}\r\n\t\t\t\t\t\ttoggleImportance={() => toggleImportanceOf(note.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<form onSubmit={addNote}>\r\n\t\t\t\t<input value={newNote} onChange={handleNoteChange} />\r\n\t\t\t\t<button type=\"submit\">save</button>\r\n\t\t\t</form>\r\n\t\t\t<Footer />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport axios from \"axios\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}